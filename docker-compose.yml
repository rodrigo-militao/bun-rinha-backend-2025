services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - backend-1
      - backend-2
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  backend-1: &backend-template
    build:
      context: .
      dockerfile: Dockerfile
    command: bun dist/api.js
    expose:
      - '3000'
    environment:
      - REDIS_URL=redis://redis:6379
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
      - APP_INSTANCE_ID=app1
    networks:
      - backend
      - payment-processor
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "100MB"

  backend-2:
    <<: *backend-template
    command: bun dist/worker.js
    environment:
      - APP_INSTANCE_ID=app2

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: bun dist/worker.js
  #   networks:
  #     - backend
  #     - payment-processor
  #   env_file:
  #     - .env
  #   environment:
  #     - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
  #     - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
  #     - REDIS_URL=redis://redis:6379
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.30"
  #         memory: "120MB"

  # db:
  #   image: postgres:15
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: payments
  #     PGDATA: /var/lib/postgresql/data/pgdata
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data/pgdata
  #     - ./db/init:/docker-entrypoint-initdb.d
  #     - ./db/conf/postgresql.conf:/etc/postgresql/postgresql.conf:ro
  #   networks:
  #     - backend
  #   shm_size: "64MB"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: "0.30"
  #         memory: "80MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes: {}