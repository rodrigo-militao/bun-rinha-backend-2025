services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - backend-1
      - backend-2
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  backend-1: &backend-template
    build:
      context: .
      dockerfile: Dockerfile
    command: bun dist/api.js
    expose:
      - '3000'
    environment:
      - LISTEN_ADDR=3000
      - REDIS_URL=redis://redis:6379
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
      - APP_INSTANCE_ID=app1
    networks:
      - backend
      - payment-processor
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "100MB"

  backend-2:
    <<: *backend-template
    command: bun dist/worker.js
    environment:
      - APP_INSTANCE_ID=app2

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes: {}