services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "30MB"

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:80"
    depends_on:
      - api1
      - api2
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "30MB"

  api1:
    build:
      context: .
      dockerfile: Dockerfile
    command: bun dist/api.js
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "60MB"

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    command: bun dist/api.js
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "60MB"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: bun dist/worker.js
    networks:
      - backend
      - payment-processor
    env_file:
      - .env
    environment:
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
      - REDIS_URL=redis://redis:6379
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "80MB"

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/conf/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - backend
    shm_size: "64MB"
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: "90MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  pgdata: